# logit 配置文件的模板 v0.1.3

# 日志级别，可取值有 debug，info，warn，error，off
"level": "info",

# 是否需要记录文件信息，可取值有 true，false
# 注意记录文件信息会有运行时操作，比较消耗性能，确保您是必须要记录才开启这个选项
"caller": false,

# 日志处理器，您可以添加多个日志处理器，可选值有 default，json
# 只有当你使用 RegisterHandler 将你自定义的日志处理器注册进 logit 才可以在这里使用
"handlers": {
    # 这里使用 Json 形式的日志处理器
    # 注意：以下是每个日志处理器所需要的参数，并且会以键值对的形式注入到 RegisterHandler 的 newHandler 中
    # 配置文件只负责把参数传递进去，要怎么使用这些参数是这个日志处理器自己的事情
    # 所以不同的日志处理器的参数也不一定相同，需要参考具体日志处理器的文档描述
    "json": {
        # 时间格式化样板，如果是 "" 就说明不格式化时间，使用 unix 形式
        "timeFormat": "2006年01月02日",

        # 日志写出器
        # 这个选项如果不设置就使用 os.Stdout 来输出日志
        "writer": {
            # 当使用 duration 的时候，可以设置时间间隔和日志输出的目标文件夹
            # 当使用 size 的时候，可以设置文件最大大小和日志输出的目标文件夹
            # 当使用 off 的时候，可以设置日志文件的路径

            # 使用 duration 的范例
            # rolling 是否需要使用滚动的日志机制，可选值有 duration，size，off
            # 注意这个 duration 的 1 的单位是秒，也就是每隔一秒滚动一个日志文件
            # directory 表示日志存储的文件夹，因为会有很多日志文件需要存储，所以这里配置的是文件夹
            "rolling": "duration",
            "duration": 1,
            "directory": "D:/"

            # 使用 size 的范例
            # rolling 是否需要使用滚动的日志机制，可选值有 duration，size，off
            # 注意这个 size 的 1 的单位是 MB，也就是日志文件达到 1 MB 之后就会滚动一个日志文件
            # directory 表示日志存储的文件夹，因为会有很多日志文件需要存储，所以这里配置的是文件夹
            #"rolling": "size",
            #"size": 1,
            #"directory": "D:/"

            # 使用 size 的范例
            # rolling 是否需要使用滚动的日志机制，可选值有 duration，size，off
            # 注意这个 size 的 1 的单位是 MB，也就是日志文件达到 1 MB 之后就会滚动一个日志文件
            # directory 表示日志存储的文件夹，因为会有很多日志文件需要存储，所以这里配置的是文件夹
            #"rolling": "off",
            #"file": "D:/me.log"
        }
    }
}